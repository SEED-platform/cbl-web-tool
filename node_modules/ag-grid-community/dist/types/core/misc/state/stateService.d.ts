import type { NamedBean } from '../../context/bean';
import { BeanStub } from '../../context/beanStub';
import type { BeanCollection } from '../../context/context';
import type { GridState } from '../../interfaces/gridState';
export declare class StateService extends BeanStub implements NamedBean {
    beanName: "stateService";
    private filterManager?;
    private ctrlsService;
    private pivotResultColsService;
    private focusService;
    private columnModel;
    private visibleColsService;
    private columnGroupStateService;
    private columnGetStateService;
    private paginationService?;
    private rowModel;
    private selectionService;
    private expansionService;
    private columnAnimationService;
    private columnApplyStateService;
    private sideBarService?;
    private rangeService?;
    wireBeans(beans: BeanCollection): void;
    private isClientSideRowModel;
    private cachedState;
    private suppressEvents;
    private queuedUpdateSources;
    private dispatchStateUpdateEventDebounced;
    private onRowGroupOpenedDebounced;
    private onRowSelectedDebounced;
    private columnStates?;
    private columnGroupStates?;
    private staleStateKeys;
    postConstruct(): void;
    getState(): GridState;
    private setupStateOnGridReady;
    private setupStateOnColumnsInitialised;
    private setupStateOnRowCountReady;
    private setupStateOnFirstDataRendered;
    private getColumnState;
    private setColumnState;
    private setColumnPivotState;
    private getColumnGroupState;
    private setColumnGroupState;
    private getFilterState;
    private setFilterState;
    private getRangeSelectionState;
    private setRangeSelectionState;
    private getScrollState;
    private setScrollState;
    private getSideBarState;
    private getFocusedCellState;
    private setFocusedCellState;
    private getPaginationState;
    private setPaginationState;
    private getRowSelectionState;
    private setRowSelectionState;
    private getRowGroupExpansionState;
    private setRowGroupExpansionState;
    private updateColumnState;
    private updateCachedState;
    private setCachedStateValue;
    private refreshStaleState;
    private dispatchStateUpdateEvent;
    private dispatchQueuedStateUpdateEvents;
    private suppressEventsAndDispatchInitEvent;
}
