{"version":3,"file":"gridjs-angular.mjs","sources":["../../../../packages/gridjs-angular/src/lib/constants.ts","../../../../packages/gridjs-angular/src/lib/gridjs-angular.component.ts","../../../../packages/gridjs-angular/src/gridjs-angular.ts"],"sourcesContent":["import type { Config } from 'gridjs';\nimport { GridEvents } from 'gridjs/dist/src/events';\n\nexport const GRID_JS_EVENTS: (keyof GridEvents)[] = [\n  'beforeLoad',\n  'cellClick',\n  'load',\n  'rowClick',\n  'ready',\n];\n\nexport const GRID_JS_PROPS: (keyof Config)[] = [\n  'eventEmitter',\n  'plugin',\n  'data',\n  'server',\n  'header',\n  'from',\n  'storage',\n  'pipeline',\n  'autoWidth',\n  'width',\n  'height',\n  'translator',\n  'style',\n  'className',\n  'fixedHeader',\n  'columns',\n  'search',\n  'pagination',\n  'sort',\n  'language',\n  'plugins',\n  'processingThrottleMs',\n];\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Config, Grid } from 'gridjs';\nimport { GRID_JS_EVENTS, GRID_JS_PROPS } from './constants';\nimport { GridEvents } from 'gridjs/dist/src/events';\n\ntype GridJsAngularComponentProps = Omit<\n  Partial<Config>,\n  'instance' | 'store' | 'assign' | 'update'\n>;\ntype GridEvent = keyof GridEvents;\ntype GridEventData<T extends GridEvent> = Parameters<\n  GridEvents[T]\n>[0] extends undefined\n  ? void\n  : Parameters<GridEvents[T]>[0];\n\ntype AnyFn = (...args: any[]) => any;\n@Component({\n  selector: 'gridjs-angular',\n  template: '',\n  standalone: true,\n  imports: [CommonModule],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GridJsAngularComponent\n  implements AfterViewInit, OnChanges, OnDestroy, GridJsAngularComponentProps\n{\n  private nativeElement: HTMLElement;\n  private instance?: Grid;\n  private initialized = false;\n  private listeners: Map<GridEvent, AnyFn> = new Map();\n  @Input() config?: Partial<Config>;\n\n  // props\n  @Input() plugins: Config['plugins'] = [];\n  @Input() eventEmitter?: Config['eventEmitter'];\n  @Input() plugin?: Config['plugin'];\n  @Input() data: Config['data'];\n  @Input() server: Config['server'];\n  @Input() header: Config['header'];\n  @Input() from?: Config['from'];\n  @Input() storage?: Config['storage'];\n  @Input() pipeline?: Config['pipeline'];\n  @Input() autoWidth?: Config['autoWidth'];\n  @Input() width?: Config['width'];\n  @Input() height?: Config['height'];\n  @Input() translator?: Config['translator'];\n  @Input() style: Config['style'];\n  @Input() className: Config['className'];\n  @Input() fixedHeader?: Config['fixedHeader'];\n  @Input() columns?: Config['columns'];\n  @Input() search?: Config['search'];\n  @Input() pagination?: Config['pagination'];\n  @Input() sort?: Config['sort'];\n  @Input() language?: Config['language'];\n  @Input() resizable?: Config['resizable'];\n  @Input() processingThrottleMs?: Config['processingThrottleMs'];\n\n  // events\n  @Output() beforeLoad: EventEmitter<GridEventData<'beforeLoad'>> =\n    new EventEmitter(true);\n  // renamed load event to avoid conflict with native load event\n  @Output() gridLoad: EventEmitter<GridEventData<'load'>> = new EventEmitter(\n    true,\n  );\n  @Output() cellClick: EventEmitter<GridEventData<'cellClick'>> =\n    new EventEmitter(true);\n  @Output() rowClick: EventEmitter<GridEventData<'rowClick'>> =\n    new EventEmitter(true);\n  @Output() ready: EventEmitter<GridEventData<'ready'>> = new EventEmitter(\n    true,\n  );\n\n  constructor(private elementDef: ElementRef) {\n    this.nativeElement = this.elementDef.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    this.instance = new Grid(this.getConfig(this.config ?? {}));\n    this.registerEvents();\n    this.instance.render(this.nativeElement);\n    this.initialized = true;\n  }\n\n  ngOnChanges(): void {\n    if (this.initialized) {\n      this.updateConfig(this.config);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.initialized) {\n      if (this.instance) {\n        this.unregisterEvents();\n        this.instance = undefined;\n      }\n    }\n  }\n  // public api to interact with grid instance\n  getGridInstance() {\n    return this.instance;\n  }\n\n  updateConfig(config: Partial<Config> = {}) {\n    this.instance?.updateConfig(this.getConfig(config)).forceRender();\n  }\n\n  private registerEvents() {\n    for (const event of GRID_JS_EVENTS) {\n      const emitter = event === 'load' ? this.gridLoad : this[event];\n      if (!emitter) {\n        continue;\n      }\n      const listener: AnyFn = (args) => emitter.emit(args);\n      this.listeners.set(event, listener);\n      if (emitter) {\n        this.instance?.on(event, listener);\n      }\n    }\n  }\n\n  private unregisterEvents() {\n    for (const [event, listener] of this.listeners.entries()) {\n      this.instance?.off(event, listener);\n    }\n  }\n\n  private getConfig(config: Partial<Config> = {}) {\n    const newConfig: Record<string, unknown> = structuredClone(config);\n    for (const [key, value] of Object.entries(this)) {\n      if (GRID_JS_PROPS.includes(key as keyof Config)) {\n        newConfig[key] = value;\n      }\n    }\n    this.config = newConfig;\n    return newConfig;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}